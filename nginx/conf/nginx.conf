# template for the root nginx.conf
user ngx_usr ngx_usr;
pid		logs/e4aee9f639c1.pid;
worker_rlimit_nofile 65535;
worker_processes auto; # match to the cpu cores or cores x2

events {
	worker_connections   102400; # ulimit -n 65535 to tunning in linux server
	multi_accept off;
	accept_mutex off;
}

http {
	init_by_lua_block {
		require('env')
		require('init')
	}
	include     inc/mime.types;
	default_type  text/plain;
	server_tokens off;
	keepalive_timeout 5s;
	keepalive_requests 10000;
	sendfile         on;
	tcp_nopush       on;
	tcp_nodelay      on;
	client_body_buffer_size    1024k; # reduce temp-upload
	client_header_buffer_size    5k;
	client_max_body_size       10m;
	client_header_timeout  12s;
	client_body_timeout    12s;
	send_timeout           10s;

	gzip off;  #Development turn off
	gzip_comp_level    6; # level 4-6 are the most efficiency settings
	gzip_min_length  256;
	gzip_buffers 32 64k;

	gzip_types      application/json application/x-javascript text/css application/javascript application/xml+rss text/javascript text/plain text/xml application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf application/xml font/eot font/opentype font/otf image/vnd.microsoft.icon; #defualt contains text/html font/ttf font/otf image/svg+xml font/woff;
	gzip_proxied any;
	fastcgi_temp_path /dev/shm/ngx_tmp;
	scgi_temp_path /dev/shm/ngx_tmp;
	uwsgi_temp_path /dev/shm/ngx_tmp;
	proxy_max_temp_file_size 128m;
	proxy_temp_file_write_size 512k;
	proxy_buffering on;
	proxy_buffer_size    16k;
	proxy_buffers           512 32k;
	proxy_busy_buffers_size 64k;
	client_body_temp_path /data/body_temp;
	proxy_temp_path /data/proxy_temp 1 2;
	lua_code_cache on;  #turn on in production
	lua_shared_dict cache 10m; #cache for all workers
	include     inc/lua.set; # lua related settings
	include     inc/log_format.set;
	lua_shared_dict acme 10m;
	dav_ext_lock_zone zone=webdav:10m;
	resolver local=on valid=60s;
	resolver_timeout 5;
	error_log logs/error.log warn; # Set to Crit on production
	lua_capture_error_log 200k;
	lua_package_path '/data/conf/default_app/?.lua;/usr/local/openresty/nginx/conf/default_app/?.lua;/usr/local/openresty/nginx/lua/?.lua;/usr/local/openresty/nginx/lua/?/init.lua;;'; # override default init_worker
	lua_package_cpath '/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;/usr/local/openresty/site/lualib/?.so;/usr/local/openresty/lualib/?.so;./?.so;/usr/local/lib/lua/5.1/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/usr/local/openresty/nginx/lua/lib/?.so;';
	init_worker_by_lua_block {
		require('init_worker')
	}

	server {
		server_name 127.0.0.1 localhost _;
		listen *:80;
		include default_app/main.conf;
	}
	
	include default_app/http_servers.conf;
}

include default_app/extra.conf;