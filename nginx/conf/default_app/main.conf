error_page 500 501 502 503 504 505 506 @5xx;
location @5xx {
    internal;
	content_by_lua_block { ngx.print( ngx.status, ' Error: ', ngx.localtime(),' ', ngx.var.remote_addr ,'\n');ngx.say(ngx.req.raw_header());ngx.say(require("ngx.errlog").get_logs(200));ngx.say(require('env').hostname)}

}
# ACME--Start
ssl_certificate cert/default.pem;
ssl_certificate_key cert/default.key;
ssl_certificate_by_lua_block {
    require("resty.acme.autossl").ssl_certificate()
}
location /.well-known {
    content_by_lua_block {
        require("resty.acme.autossl").serve_http_challenge()
    }
}
# ACME--End

#
include inc/location_empty_favicon.conf;

location / {
    content_by_lua_block {
        -- ngx.status = 403
        -- ngx.print('NO ACCESS!')
        -- ngx.exit(403)
        require("mocks").mock()
    }
}

location /dav/ {
    rewrite_by_lua_block {
        require('lib.basic_auth').handle() -- equal `handle(require('env').auth_conf)`
        -- require('lib.basic_auth').handle(require('env').auth_conf)
        -- require('lib.basic_auth').handle({user = {admin="admin4Password"}})
        require('lib.webdav').handle()
    }
    alias /data/dav/;
    access_log logs/access.log xbakey;
    # enable creating directories without trailing slash
    # set $x $uri$request_method;
    # if ($x ~ [^/]MKCOL$) {
        # rewrite ^(.*)$ $1/;
    # }
    autoindex on;
    create_full_put_path on;
    dav_methods PUT DELETE MKCOL COPY MOVE;
    dav_ext_methods PROPFIND OPTIONS LOCK UNLOCK;
    dav_access user:rw group:rw all:rw;
    dav_ext_lock zone=dav_lock;
    client_max_body_size 0;
    client_body_timeout 36000s;
}

location /__tapd {
    access_log off;
    log_not_found off;
    allow 127.0.0.1;
    allow 172.16.0.0/12; # docker
    allow 10.0.0.0/8; # internal network
    allow 192.168.0.0/16; # internal network
    deny  all;
	content_by_lua_block {
		require('lib.tap').tapd()
}
}